    Notes:
    - You can view the response in console using: $response

# GET


# Define key string
$key = "test10000"

# Construct the URL with the key parameter
$uri = "http://localhost:8090/get?key=$key"

# Send the GET request
$response = Invoke-RestMethod -Uri $uri -Method Get

# Print the response content
$response




# PUT (Expecting Two strings: Key Value)


    $uri = "http://localhost:8090/put" 

    # Define key and value strings
    $key = "test10000"
    $value = "*value*"

    # Create a PowerShell object with properties
    $jsonObject = @{
        key = $key
        value = $value
    }

    # Convert the PowerShell object to JSON format
    $jsonData = $jsonObject | ConvertTo-Json

    # Send the PUT request
    $response = Invoke-RestMethod -Uri $uri -Method Put -ContentType "application/json" -Body $jsonData

    # Print the response
    $response





# GET MAP

    $uri = "http://localhost:8090/getMap" 
    $response = Invoke-RestMethod -Uri $uri -Method Get
    $response





# UPDATE MAP

    # Define the URL
    $uri = "http://localhost:8090/updateMap"

    # Define the new map data
    $newMap = @{
        "key1" = "value1"
        "key2" = "value2"
        "key3" = "value3"
        # Add more key-value pairs as needed
    }

    # Convert the new map to JSON
    $jsonData = $newMap | ConvertTo-Json

    # Send the PUT request
    $response = Invoke-RestMethod -Uri $uri -Method Put -ContentType "application/json" -Body $jsonData

    # Print the response
    $response